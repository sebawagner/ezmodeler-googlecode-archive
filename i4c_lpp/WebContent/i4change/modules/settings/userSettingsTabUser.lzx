<?xml version="1.0" encoding="UTF-8" ?>
<library>

<!--- User Profile Setting Panel -->
<class name="userSettingsTabUser" extends="view">  
       
	<!-- content -->	
    
    <method name="initFields" args="obj">
        <![CDATA[
            this.userObj = obj;
            canvas.userobject = obj;
            this.user_id = obj.user_id;
            //this.username.setAttribute("text",obj.login);
            this._userpic.setAttribute('src',obj.downloadurl);  
            this.firstname.setAttribute("text",obj.firstname);
            this.lastname.setAttribute("text",obj.lastname);
            this.email.setAttribute("text",obj.adresses.email);
            this.age.setAttribute("text",parseDateToString(obj.age));
            this.street.setAttribute("text",obj.adresses.street);
            this.house.setAttribute("text",obj.adresses.additionalname);
            this.zip.setAttribute("text",obj.adresses.zip);
            this.town.setAttribute("text",obj.adresses.town);
            this.state.addAndSelectItem(obj.adresses.states.name,String(obj.adresses.states.country_id));
            this.adress_comment.setAttribute("text",obj.adresses.comment);
            this.salutation.selectItem(String(obj.title_id));
            this._organisationslist.clearList();
            
            this.login.setAttribute("text",obj.login);
            this.phone.setAttribute("text",obj.adresses.phone);
            this.mobile.setAttribute("text",obj.adresses.mobile);
            
            this._doNotShowAgain.callIt = false;
            
            var showFirstStartWizzard = canvas.getUserProperty("showFirstStartWizzard");
            
            if ($debug) Debug.write("showFirstStartWizzard",showFirstStartWizzard);
            if (showFirstStartWizzard != null) {
                if (showFirstStartWizzard) {
                     this._doNotShowAgain.setValue(false);
                } else {
                	this._doNotShowAgain.setValue(true);
                }
            } else {
                this._doNotShowAgain.setValue(false);
            }
            
            this._doNotShowAgain.callIt = true;
            
            for (var i=0;i<obj.organisation_users.length;i++){
                this._organisationslist.addItem(obj.organisation_users[i].organisation.name,obj.organisation_users[i].organisation.organisation_id);
            }
        ]]>
    </method>
    
    <method name="doSaveTemp">
	    //if ($debug) Debug.write("Save Temp User Values");
        if (this.userpass1.getText()==this.userpass2.getText()){
            this.parent.parent.userObj.userpass = this.userpass1.getText();
        } else {
            this.parent.parent.userObj.userpass = '';
        }
        this.parent.parent.userObj.login = this.login.getText();
        this.parent.parent.userObj.firstname = this.firstname.getText();
        this.parent.parent.userObj.lastname = this.lastname.getText();
        this.parent.parent.userObj.adresses.emails = this.email.getText();
        this.parent.parent.userObj.adresses.mobile = this.mobile.getText();
        this.parent.parent.userObj.adresses.phone = this.phone.getText();
        this.parent.parent.userObj.adresses.street = this.street.getText();
        this.parent.parent.userObj.adresses.additionalname = this.house.getText();
        this.parent.parent.userObj.adresses.zip = this.zip.getText();
        this.parent.parent.userObj.adresses.town = this.town.getText();
        this.parent.parent.userObj.adresses.states.state_id = Number(this.state.getValue());
        this.parent.parent.userObj.adresses.comment = this.adress_comment.getText();
        this.parent.parent.userObj.age = this.age.getDate();
        this.parent.parent.userObj.title_id = Number(this.salutation.getValue());
	</method>
    
    <!-- 143:userdata -->
    <labelText labelid="143" width="200" y="0" resize="false" fontstyle="bold" />

    <!-- 133:Password -->
    <labelText labelid="133" width="200" y="30" resize="false" x="2"/>
        <customEdittext name="userpass1" y="30" password="true" x="120" width="270" text="" />
        
    <!-- 134:Retype -->
    <labelText labelid="134" width="200" y="60" resize="false" x="2"/>
        <customEdittext name="userpass2" y="60" password="true" x="120" width="270" text="" />   
        
    <!-- 134:Login -->
    <labelText labelid="1102" width="200" y="90" resize="false" x="2"/>
        <customEdittext name="login" y="90" x="120" width="270" text="" />   
    
    <!-- 135:Firstname -->
    <labelText labelid="135" width="200" y="120" resize="false" x="2"/>
        <omComboBox name="salutation" width="100" y="120" x="120"  editable="false" fontsize="11">
	        <handler name="oninit" >
	            <![CDATA[
	            for (var i=0;i<canvas.salutationsInitValues.length;i++){
	                this.addItem(canvas.salutationsInitValues[i].name,canvas.salutationsInitValues[i].salutations_id);
	            }
	            this.selectItem(String(canvas.salutationsInitValues[0].salutations_id));
	            ]]>
	        </handler> 
        </omComboBox>
        <customEdittext name="firstname" y="120" x="230" width="120" text="" />
        
    <!-- 136:Lastname -->
    <labelText labelid="136" width="200" y="150" resize="false" x="2"/>
        <customEdittext name="lastname" y="150" x="120" width="270" text="" />                

    <!-- 137:Mail -->
    <labelText labelid="137" width="200" y="180" resize="false" x="2"/>
        <customEdittext name="email" y="180" x="120" width="270" text="" regexpType="email" />
        
    <!-- 137:Phone -->
    <labelText labelid="1100" width="200" y="210" resize="false" x="2"/>
        <customEdittext name="phone" y="210" x="120" width="270" text="" />
        
    <!-- 137:Mobile -->
    <labelText labelid="1101" width="200" y="240" resize="false" x="2"/>
        <customEdittext name="mobile" y="240" x="120" width="270" text="" />
        
    <!-- 138:Birthday -->
    <labelText labelid="138" width="200" y="270" resize="false" x="2"/>
        <dateField name="age" y="270" x="120" width="270" text="" />
        
    <!-- 139:Street/No -->
    <labelText labelid="139" width="200" y="300" resize="false" x="2"/>
        <customEdittext name="street" y="300" x="120" width="220" text="" />
        <customEdittext name="house" y="300" x="350" width="40" text="" />
        
    <!-- 140:ZIP/Town -->
    <labelText labelid="140" width="280" y="330" resize="false" x="2"/>
        <customEdittext name="zip" y="330" x="120" width="70" text="" />   
        <customEdittext name="town" y="330" x="200" width="190" text="" />                        
         
    <!-- 141:Country -->
    <labelText labelid="141" width="200" y="360" resize="false" x="2"/>  
		<validText name="state" width="270" y="360" x="120" fontsize="12" 
            shownitems="7" validate_method="$once{ canvas.validateCountry }" 
            resultId="country_id" resultName="name" />
			
	 
    <!-- 142:Adress-Info -->
    <labelText labelid="142" width="200" y="390" resize="false" x="2"/>
        <customEdittext name="adress_comment" y="390" x="120" width="270" 
            height="100" text="" multiline="true"/>
       
    <!-- 161:Organisations -->
    <labelText labelid="161" width="200" y="500" resize="false" x="2"/>     
    <simpleValueList name="_organisationslist" y="500" x="120" width="270" height="100" 
		multiselect="true" />
		
    <image y="10" x="410" name="_userpic">
    	<method name="sendRefresh">
    		_userDashBoard.sendRefresh();
    		this.getUserPictureURI.doCall();
    	</method>
    	<netRemoteCallRPC name="getUserPictureURI" funcname="getUserPictureURI" 
            remotecontext="$once{  canvas.userServiceRPC }" > 
            <netparam><method name="getValue"> return canvas.sessionId; </method></netparam>
            <handler name="ondata" args="value">
                <![CDATA[
                    //if ($debug) Debug.write("getUserPictureURI ",value);
                    if (value==null || value.length==0){
                        value = "d.jpg";
                    } else {
                        value = "_profile_"+value;
                    }
                    var downloadurl = canvas.httpprotocol+'://'+canvas.rtmphostlocal+':'+canvas.httpport
                            +'/'+canvas.webAppRootKey+'/DownloadHandler?fileName='+value
                            +'&moduleName=userprofile&parentPath=&room=&domain='
                            +'&sid='+canvas.sessionId;
                    //if ($debug) Debug.write("downloadurl "+downloadurl);
                    parent.setSource(downloadurl)
                ]]>
            </handler>
        </netRemoteCallRPC> 
    </image>
    
    <!-- 379:Upload new Image -->
    <simpleLabelButton y="10" labelid="379" x="550"
        onclick="new lz.uploadWindow(canvas.main_content._content.inner,{x:300,uploadmodule:'userprofile',isOnlyProfile:true,isdefaultreturn:false,returnObj:this.parent._userpic});" /> 		
     
    <labelCheckbox x="410" y="200" fontsize="12"
        name="_doNotShowAgain" labelid="787" >
        <attribute name="callIt" value="true" type="boolean" />
        <handler name="onvalue">
            if (this.isinited){
	            if (this.callIt){
	                this.setNewUserProperty.doCall();
	            }
            }
        </handler>
	    <netRemoteCallRPC name="setNewUserProperty" funcname="setNewUserProperty" 
	    				  remotecontext="$once{  canvas.mainServiceRPC }" >      
	        <netparam><method name="getValue"> return canvas.sessionId; </method></netparam>  
	        <netparam><method name="getValue"> return "showFirstStartWizzard"; </method></netparam>  
	        <netparam><method name="getValue"> return !parent.parent.getValue(); </method></netparam>  
	        <handler name="ondata" args="value">
	            //The onResult-Handler will be called be the rtmpconnection
	            ////if ($debug) Debug.write("RESULT setNewUserProperty: ",value);
	            parent.parent.oninit.sendEvent();
	        </handler>  
	    </netRemoteCallRPC>            
    </labelCheckbox>
        
</class>

</library>
