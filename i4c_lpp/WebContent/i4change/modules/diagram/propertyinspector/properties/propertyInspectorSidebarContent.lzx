<?xml version="1.0" encoding="UTF-8"?>
<library>

<class name="propertyListItem" extends="baseContentListItem">
    <attribute name="propObj" value="null" />
    <attribute name="refContentObj" value="null" />
    <labelText labelid="$once{ parent.propObj.labelid }" width="160" multiline="true"
               resize="false" y="2" />
    <customEdittext name="_value" width="210" height="22"
                    regexpType="$once{ parent.propObj.validationValue }"
                    text="$once{ parent.propObj.value }">
        <handler name="onblur">
            parent.refContentObj.updatePropValue(parent.propObj.propertyId,this.text);
        </handler>
    </customEdittext>
    <labelTooltip labelid="$once{ parent.propObj.toolTip }" />
</class>

<class name="propertyComboListItem" extends="baseContentListItem">
    <attribute name="propObj" value="null" />
    <attribute name="refContentObj" value="null" />
    <labelText labelid="$once{ parent.propObj.labelid }" width="160" multiline="true"
               resize="false" y="2" />
    <omDynamicComboBox name="_value" width="210" height="22"
                    text="$once{ parent.propObj.value }" value="$once{ parent.propObj.value }">
	    <handler name="initContent">
            <![CDATA[
                this.initList();
                this.getPropertyListItemsByPropertyId.doCall();
            ]]>
        </handler>
        <netRemoteCallRPC name="getPropertyListItemsByPropertyId" funcname="getPropertyListItemsByPropertyId" 
            remotecontext="$once{  canvas.propertyServiceRPC }" > 
            <attribute name="doReload" value="false" type="boolean" />
            <netparam><method name="getValue">return canvas.sessionId; </method></netparam>
            <netparam><method name="getValue">return parent.parent.parent.propObj.propertyId;</method></netparam>
            <handler name="ondata" args="value">
                <![CDATA[
                    //if ($debug) Debug.write("getPropertyListItemsByPropertyId: ",value);
                    //if ($debug) Debug.write("getPropertyListItemsByPropertyId propertyId: ",parent.parent.propObj.propertyId);
                    for (var i=0;i<value.length;i++) {
                        parent.cList.addItem(value[i].key,value[i].value);
                    }
                    parent.doDefaultSelection();
                ]]>
            </handler>
        </netRemoteCallRPC>
        <!--
        for (var i=0;i<this.valueList.length;i++){
                    //set to null as only Admins will do that
                    //they do not need a orgusre Object, as they have all menu options given
                    this.cList.addItem(this.valueList[i].name,this.valueList[i].organisation_id);
                }   
                
                this.doDefaultSelection();
          -->      
        <handler name="onselect">
        	//if ($debug) Debug.write("onselect ",parent.propObj.propertyId,this.text);
            parent.refContentObj.updatePropValue(parent.propObj.propertyId,this.text);
        </handler>
        
    </omDynamicComboBox>
    
    <labelTooltip labelid="$once{ parent.propObj.toolTip }" />
</class>
    

<class name="propertyListItemMultiline" extends="baseContentListItem">
    <attribute name="propObj" value="null" />
    <attribute name="refContentObj" value="null" />
    <labelText labelid="$once{ parent.propObj.labelid }" width="160" multiline="true"
               resize="false" y="2" />
    <customScrollEdittext name="_value" width="210" 
          height="$once{ parent.propObj.textBoxHeight }" text="$once{ parent.propObj.value }">
        <handler name="onblur">
            parent.refContentObj.updatePropValue(parent.propObj.propertyId,this.getText());
        </handler>
    </customScrollEdittext>
    <labelTooltip labelid="$once{ parent.propObj.toolTip }" />
</class>

<class name="propertyListIssueFlowDetails" extends="baseContentListItem">
    
    <labelText x="2" labelid="660" />  
    <attribute name="sendUpdateEvent" value="false" type="number" />
    <attribute name="refContentObj" value="null" />
     
    <omComboBox name="users" width="220" editable="false" >
        <handler name="onselect">
            if (this.getValue()=="0"){
                new lz.errorPopupWithLabel(canvas,{labelerrorid:945});
            } else if (parent.sendUpdateEvent){
                //if ($debug) Debug.write("USER_SELECTED: ",this,parent.parent.parent.parent.parent);
                parent.refContentObj.setNewAssigneeValue(this.value,this.text);
            }
        </handler>              
    </omComboBox>
    <labelTooltip labelid="1321" />
</class>

<class name="propertyListPendingDetails" extends="view">
    
    <labelText name="_label" x="2" labelid="660" width="100"/>  
    <attribute name="sendUpdateEvent" value="false" type="number" />
    <attribute name="refContentObj" value="null" />
    
    <method name="approveObject">
    	this.refContentObj.approveObject();
    </method>
    
    <method name="removeObject">
    	this.refContentObj.removeObject();
    </method>
     
    <omComboBox name="users" x="${ parent._label.width }" width="220" editable="false" >
        <handler name="onselect">
            if (this.getValue()=="0"){
                new lz.errorPopupWithLabel(canvas,{labelerrorid:945});
            } else if (parent.sendUpdateEvent){
                //if ($debug) Debug.write("USER_SELECTED: ",this);
                parent.refContentObj.setNewPendingAssigneeValue(this.value,this.text);
            }
        </handler>              
    </omComboBox>
    
    <handler name="oninit">
        if (canvas.userobject.userlevel.level_id == 1){
            new lz.infoIconBox(this._infoContent,{
                    width:this.users.width,x:0,labelid:730
                });
        } else {
            new lz.propertyListApprovalOfPendingObject(this._infoContent,{refContentObj:this});
        }
    </handler>
    
    <view x="${ parent._label.width }" y="20" name="_infoContent" />
    
</class>

<class name="propertyListApprovalOfPendingObject" extends="view" width="${ parent.width }">
    <attribute name="refContentObj" value="null" />
    <infoIconBox name="_infoBox" labelid="731" width="${ parent.width }" x="0"/>
    <simpleLabelButton labelid="732" name="_approve" x="0" y="30" width="105" >
        <handler name="onclick">
            ////if ($debug) Debug.write("parent.parent.parent.parent.parent: ",parent.parent.parent.parent.parent.parent.parent);
            parent.refContentObj.approveObject();
        </handler>
    </simpleLabelButton>
    <simpleLabelButton labelid="733" name="_remove" x="105" y="30" width="105" >
        <handler name="onclick">
            parent.refContentObj.removeObject();
        </handler>
    </simpleLabelButton>
</class>

<class name="propertyList" extends="view" layout="axis:y;spacing:2" />

<!--
    ######## propertyInspectorSidebarContent #########
 -->
<class name="propertyInspectorSidebarContent" extends="view" 
       y="20" bgcolor="white" x="16" width="${ parent.width-16 }" 
          height="300" clip="true">
    
    <attribute name="diagramobjectId" value="0" type="number" />
    
    <handler name="oninit">
        <![CDATA[
            this.addHeaderItem(1316,160);
            var w = this.width-180;
            if (w < 100){
                w = 100;
            }
            this.addHeaderItem(1317,w);
        ]]>
    </handler>
    
    <!--
    This is not a good idea, otherwise you overwrite some of the values
    from the previous input
    <handler name="onvisibility" args="visibility">
        if ($debug) Debug.write("onvisibility",visibility);
        if (this.visibility == "visible") {
            parent.loadContentBySelection();
        }
    </handler>
     -->
    
    <method name="clearList">
        ////if ($debug) Debug.write("############ propertyInspectorSidebarContent clearList ");
        this.selectedObj = null;
        this._innerlist._inn._inn.destroy();
    </method>
    
    <method name="updatePropValue" args="propertyId,text">
        parent.updatePropValue(propertyId,text);
    </method>
    
    <method name="setNewAssigneeValue" args="value,text">
    	parent.setNewAssigneeValue(value,text);
    </method>
    
    <method name="setNewPendingAssigneeValue" args="value,text">
        parent.setNewPendingAssigneeValue(value,text);
    </method>
    
    <method name="approveObject">
        parent.approveObject();
    </method>
    
    <method name="removeObject">
        parent.removeObject();
    </method>
    
    <method name="loadCategories" args="catList,currentCategoryId">
    	<![CDATA[
    	
    	   for (var eg in this._propertyTabsBar.subviews) {
              this._propertyTabsBar.subviews[eg].destroy();
           }
    	
    	   var t = new lz.propertyTab(this._propertyTabsBar,{
                                        	   	       style:'noStyle',selected:true,
                                            	       text:canvas.getLabelName(1342),
                                            	       propertyCategoryId:0
                                            	   });
           
    	   if ($debug) Debug.write("currentCategoryId ",currentCategoryId);
           if (currentCategoryId == 0) {
           	   t.selected = true;
               this._propertyTabsBar.selected = t;
               this._propertyTabsBar.selected.onmouseover.sendEvent();	
           }    
           
           for (var i=0;i<catList.length;i++){
           	   var t = new lz.propertyTab(this._propertyTabsBar,{
           	   	       style:'noStyle',
                       text:catList[i].categoryName,
                       propertyCategoryId:catList[i].propertyCategoryId
                   });
               if (currentCategoryId == catList[i].propertyCategoryId) {
               	   t.selected = true;
                   this._propertyTabsBar.selected = t;
                   this._propertyTabsBar.selected.onmouseover.sendEvent();  
               } 
           }
    	
    	]]>
    </method>
    
    <method name="loadPropertiesList" args="baseObject,pList,popertyListTemp,ispending">
        <![CDATA[
        
            var propList = new lz.innerList(this._innerlist._inn,{name:'_inn'});
            
            if ($debug) Debug.write("baseObject: ",baseObject);
            
            //Add the Assignee to the List of Properties
            //BUT see also Non Visual Objects like the Data Carrier that uses this List
            if (baseObject != null && baseObject[0] == "issueflow") {
                var _issueFlowDetails = new lz.propertyListIssueFlowDetails(propList,{refContentObj:this});
                ////if ($debug) Debug.write("canvas.currentDiagramRef: ",canvas.currentDiagramRef);
                ////if ($debug) Debug.write("currentDrawArea: ",currentDrawArea);
                var assigneeUser_id = baseObject[baseObject.length-9];
                ////if ($debug) Debug.write("baseObject: ",assigneeUser_id);
                var adminAdded = false;
                for (var eg=0;eg<canvas.orgUserList.length;eg++) {
                    if (canvas.orgUserList[eg].level_id > 1) {
                        if (!adminAdded){
                            adminAdded = true;
                            _issueFlowDetails.users.addItem(canvas.getLabelName(946),"0");
                        }
                        _issueFlowDetails.users.addItem(canvas.orgUserList[eg].login,
                            canvas.orgUserList[eg].user_id);
                    } else {
                        _issueFlowDetails.users.addItem(canvas.orgUserList[eg].login,
                            canvas.orgUserList[eg].user_id);
                    }
                }
                _issueFlowDetails.users.selectItem(String(assigneeUser_id));
                _issueFlowDetails.sendUpdateEvent = true;
            }
            
            //If this is a Pending Object add the Box with the approval or assignee?!
            if (ispending) {
                var _pendingDetails = new lz.propertyListPendingDetails(propList,{refContentObj:this});
                var assigneeUser_id = baseObject[baseObject.length-10];
                var assigneeUser_Name = baseObject[baseObject.length-11];
                
                var adminAdded = false;
                for (var eg=0;eg<canvas.orgUserList.length;eg++) {
                    ////if ($debug) Debug.write("canvas.orgUserList[eg].orgUser.isModerator: ",canvas.orgUserList[eg].orgUser.isModerator);
                    if (canvas.orgUserList[eg].orgUser.isModerator){
                         _pendingDetails.users.addItem(canvas.orgUserList[eg].login,canvas.orgUserList[eg].user_id);
                    } else if (canvas.orgUserList[eg].level_id > 1) {
                        if (!adminAdded){
                            adminAdded = true;
                            _pendingDetails.users.addItem(canvas.getLabelName(946),"0");
                        }
                        _pendingDetails.users.addItem(canvas.orgUserList[eg].login,canvas.orgUserList[eg].user_id);
                    }
                }
                
                //In case of there is no user with Moderation/Administration rights
                if (_pendingDetails.users.getItem(String(assigneeUser_id)) == null){
                    _pendingDetails.users.addItem(assigneeUser_Name,assigneeUser_id);
                }
                _pendingDetails.users.selectItem(String(assigneeUser_id));
                _pendingDetails.sendUpdateEvent = true;
            }
            
            //Init the ususal Properties with their values from temp and loaded
            for (var i=0;i<pList.length;i++) {
                
                //Overwrite the Stored values with the ones that 
                //we have in our current Diagram-Instance on the Screen
                if (popertyListTemp != null && popertyListTemp != "null") {
                	if ($debug) Debug.write("popertyListTemp: ",popertyListTemp,popertyListTemp.length);
                    for (var k=0;k<popertyListTemp.length;k++) {
                    	//if ($debug) Debug.write("popertyListTemp[k].propertyId",popertyListTemp[k].propertyId);
                    	//if ($debug) Debug.write("pList[i].propertyId",pList[i].propertyId,pList[i]);
                        if (popertyListTemp[k].propertyId == pList[i].propertyId) {
                            pList[i].value = popertyListTemp[k].propertyVal;
                            break;
                        }
                    }
                }
                
                if (pList[i].validationValue == "list") {
                    new lz.propertyComboListItem(propList,{
                             propObj:pList[i],refContentObj:this
                        });
                } else if (pList[i].textBoxHeight == null) {
                    new lz.propertyListItem(propList,{
                             propObj:pList[i],refContentObj:this
                        });
                } else {
                    new lz.propertyListItemMultiline(propList,{
                             propObj:pList[i],refContentObj:this
                        });
                }
                
            }
            
            this.sendInitialWidthUpdate();
        ]]>
    </method>
    
    <!--
    <labelText x="2" y="2" labelid="658" />
    <labelText name="_name" x="80" y="2" bgcolor="0xEFEFEF"
               width="400" resize="false" />
     -->         
               
    <method name="sendInitialWidthUpdate">
        for (var eg in this._innerlisthead._inn.subviews) {
            this._innerlisthead._inn.subviews[eg].onwidth.sendEvent(this._innerlisthead._inn.subviews[eg].width);
        }
    </method> 
    
    <method name="addHeaderItem" args="labelid,width" >
        new lz.turnOverListHeaderItem(this._innerlisthead._inn,{
                labelid:labelid,width:width,
                subviewsid:this._innerlisthead._inn.subviews.length
            });
    </method>
    
    <method name="sendWidthUpdate" args="w,subviewsid" >
        <![CDATA[
            //if ($debug) Debug.write("sendWidthUpdate",w,subviewsid);
            var list = this._innerlist._inn._inn.subviews;
            for (var i=0;i<list.length;i++){
                list[i].subviews[subviewsid].setAttribute('width',w);
            }
        ]]>
    </method>    
    
    <propertyTabsBar name="_propertyTabsBar" y="0" x="1" width="${ parent.width-2 }">
    	<handler name="onselect" args="sel">
    		if ($debug) Debug.write("onselect ",sel,sel.propertyCategoryId);
    		parent.parent.loadContentByCategory(sel.propertyCategoryId);
    	</handler>
    </propertyTabsBar>         
    
    <!-- =========  List Header area  =========-->

    <view name="_innerlisthead" height="20" width="${ parent.width }" 
        x="${ parent._innerlist.x }" y="${ parent._propertyTabsBar.height }" clip="true" bgcolor="0xCCCCCC">
        <view name="_inn" x="${ parent.parent._innerlist._inn.x }" 
              layout="axis:x;spacing:0" />
    </view> 
    
    <!-- =========  List Contents area  =========-->
    <view name="_innerlist" height="${ parent.height-this.y-2 }" width="${ parent.width }"
        y="${ parent._propertyTabsBar.height + 20 }" clip="true">
        <view name="_inn" >
            <innerList name="_inn" />
        </view>
        <vscrollbar name="_scrollbar" />
        <hscrollbar />
    </view>
     
</class>



</library>
