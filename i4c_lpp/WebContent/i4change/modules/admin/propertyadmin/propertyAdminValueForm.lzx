<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<class name="propertyCategoryIcons" extends="view" layout="axis:x;spacing:0">
    <iconViewToolTip iconSourceName="property_category_search_rsc" 
                     width="20" height="20" labelid="1323">
        <handler name="onclick">
            parent.parent.propertyCategory.search();
        </handler>
    </iconViewToolTip>
    <iconViewToolTip iconSourceName="property_category_add_rsc" 
                     width="20" height="20" labelid="1324">
        <handler name="onclick">
            parent.parent.propertyCategory.addItem();
        </handler>
    </iconViewToolTip>
    <iconViewToolTip iconSourceName="property_category_delete_rsc" 
                     width="20" height="20" labelid="1329">
        <handler name="onclick">
            parent.parent.propertyCategory.setAttribute("text","");
            parent.parent.propertyCategory.propertyCategoryId = 0;
        </handler>
    </iconViewToolTip>
    <view height="20" width="1" bgcolor="$once{ canvas.basebgcolorizer }" />
</class>

<!--- configuration edit panel. -->
<class name="propertyAdminValueForm" extends="baseContentSaveView">

	<!-- recordContent-id -->
	<attribute name="propertyId" value="0" type="number" />
    <attribute name="obj" value="null" />
	
	<!--handlers -->
    
    <handler name="oninit">
        this.getAllOrganisations.doCall();
		this.getPropertyValidationTypes.doCall();
    </handler>
    
    <netRemoteCallRPC name="getAllOrganisations" funcname="getAllOrganisations" 
                      remotecontext="$once{  canvas.organisationServiceRPC }" >      
        <netparam><method name="getValue"> return canvas.sessionId; </method></netparam> 
        <handler name="ondata" args="value">
            <![CDATA[
                //The onResult-Handler will be called be the rtmpconnection
                //Debug.write("allowFrontendRegister: ",value);
                parent.organisation.valueList = value;
                //parent.organisation.addItemWithObject(canvas.getLabelName(996),0,null,null);
                //for (var i=0;i<value.length;i++){
                //    //set to null as only Admins will do that
                    //they do not need a orgusre Object, as they have all menu options given
                //    parent.organisation.addItemWithObject(value[i].name,value[i].organisation_id,value[i],null);
                //}
                //parent.organisation.loadDefault();
            ]]>
        </handler>  
    </netRemoteCallRPC>     
    
    <!--
    	//TODO: THIS IS ****
    	//It should be in the init Method - For some un-known reasons the dataset is not filled there
     -->
    <netRemoteCallRPC name="getPropertyValidationTypes" funcname="getPropertyValidationTypes" 
                      dataobject="propertyValidationTypes" remotecontext="$once{ canvas.propertyServiceRPC }" >
        <netparam><method name="getValue">return canvas.sessionId;</method></netparam>
        <handler name="ondata" args="value">
            //The onResult-Handler will be called be the rtmpconnection
            //if ($debug) Debug.write("getPropertyValidationTypes ",value);
            //if ($debug) Debug.write("getPropertyValidationTypes ",canvas.propertyValidationTypes);
            
            //parent.propertyValidationType.selectItemAt(0);
            parent.getDiagramObjectTypes.doCall();
        </handler>  
    </netRemoteCallRPC> 
    
    <!--
    public List<ObjectTypeDTO> getDiagramObjectTypes(String SID) {
     -->
    <netRemoteCallRPC name="getDiagramObjectTypes" funcname="getDiagramObjectTypes" 
                      dataobject="diagramObjectTypesDS" remotecontext="$once{ canvas.propertyServiceRPC }" >
        <netparam><method name="getValue">return canvas.sessionId;</method></netparam>
    </netRemoteCallRPC> 

	<handler name="onsavecompleted" >
		this.getPropertyById.doCall();
	</handler>
	
	<handler name="onreload" >
		if (this.propertyId!=0) this.getPropertyById.doCall();
	</handler>	

	<handler name="onnew">
		this.propertyId=0;
		this.propertyName.setAttribute('text',"");
        this.tooltip.setAttribute('text',"");
        this.objectTypeName.selectItemAt(0);
        this.isPublic.setValue(true);
        this.organisation.selectItem(canvas.getLabelName(996),"0");
        this.propertyCategory.setPropertyCategory("","0");
        this.comment.setAttribute('text',"");
        this.propertyValidationType.selectItemAt(0);
        this._listItems.clearList();
	</handler>
	
    <handler name="ondelete" >
		if (this.propertyId!=0){
			this.deleteProperty.doCall();
		}
    </handler>
	
	<!-- methods -->

    <method name="initValueFieldsByObject" args="obj">
        //if ($debug) Debug.write("initValueFieldsByObject: ",obj);
		this.propertyId = obj.propertyId;
		if (this.propertyId!=0){
			this.getPropertyById.doCall();
		}
    </method>
    
    <method name="initFields" args="obj">
    	<![CDATA[
            if ($debug) Debug.write("initFields: ",obj);
            this.obj = obj;
            if (obj == null) {
            	return;
            }
			this.propertyName.setAttribute('text',canvas.getLabelName(obj.labelid));
			this.tooltip.setAttribute('text',canvas.getLabelName(obj.toolTip));
			
            this.objectTypeName.selectItem(obj.objectTypeName);
            this.isPublic.setValue(obj.isPublic);
            if (obj.organisation != null) {
                this.organisation.selectItem(obj.organisation.name,String(obj.organisation.organisation_id));
            } else {
                this.organisation.selectItem(canvas.getLabelName(996),"0");
            }
            if (obj.propertyValidationTypeId == null) {
                this.propertyValidationType.selectItemAt(0);
            } else {
                this.propertyValidationType.selectItem(String(obj.propertyValidationTypeId));
            }
            
            if (obj.propertyCategory == null) {
            	this.propertyCategory.setPropertyCategory("","0");
            } else {
            	this.propertyCategory.setPropertyCategory(obj.propertyCategory.categoryName,obj.propertyCategory.propertyCategoryId);
            }
            
            this.comment.setAttribute('text',obj.comment);
        ]]>
    </method>
	
	<!-- remotecalls
    
    <netRemoteCallRPC name="getAllOrganisations" funcname="getAllOrganisations" 
                      remotecontext="$once{  canvas.organisationServiceRPC }" >      
        <netparam><method name="getValue"> return canvas.sessionId; </method></netparam> 
        <handler name="ondata" args="value">
            <![CDATA[
                //The onResult-Handler will be called be the rtmpconnection
                //Debug.write("allowFrontendRegister: ",value);
                parent.organisation.addItemWithObject(canvas.getLabelName(996),0,null,null);
                for (var i=0;i<value.length;i++){
                    //set to null as only Admins will do that
                    //they do not need a orgusre Object, as they have all menu options given
                    parent.organisation.addItemWithObject(value[i].name,value[i].organisation_id,value[i],null);
                }
                parent.organisation.loadDefault();
            ]]>
        </handler>  
    </netRemoteCallRPC>      
     --> 
	
  	<netRemoteCallRPC name="getPropertyById" funcname="getPropertyById" 
  		remotecontext="$once{  canvas.propertyServiceRPC }" > 
  		<attribute name="doReload" value="false" type="boolean" />
  		<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
    	<netparam><method name="getValue">return parent.parent.propertyId;</method></netparam>
    	<handler name="ondata" args="value">
    		<![CDATA[
	    		//if ($debug) Debug.write("getPropertyById: ",value);
	    		if (this.doReload) {
	    			if (value == null && parent.propertyId > 0) {
	    				this.doCall();
	    			} else {
		    			this.doReload = false;
		    			parent.getLanguageByIdAndVectorLabeled.labels = new Array();
		    			parent.getLanguageByIdAndVectorLabeled.labels.push(value.labelid);
		    			parent.getLanguageByIdAndVectorLabeled.labels.push(value.toolTip);
		    			parent.getLanguageByIdAndVectorLabeled.doCall();
	    			}
	    		} else {
	    			parent.getPropertyListItemsByPropertyId.doCall();
	    			parent.initFields(value);
	    		}
    		]]>
    	</handler>
  	</netRemoteCallRPC>
  	
  	<!--
  	public List<PropertyListItem> getPropertyListItemsByPropertyId(String SID, Long propertyId)
  	 -->
  	<netRemoteCallRPC name="getPropertyListItemsByPropertyId" funcname="getPropertyListItemsByPropertyId" 
        remotecontext="$once{  canvas.propertyServiceRPC }" > 
        <attribute name="doReload" value="false" type="boolean" />
        <netparam><method name="getValue">return canvas.sessionId; </method></netparam>
        <netparam><method name="getValue">return parent.parent.propertyId;</method></netparam>
        <handler name="ondata" args="value">
            <![CDATA[
                //if ($debug) Debug.write("getPropertyListItemsByPropertyId: ",value);
                //if ($debug) Debug.write("getPropertyListItemsByPropertyId propertyId: ",parent.propertyId);
                parent._listItems.clearList();
                for (var i=0;i<value.length;i++) {
                	parent._listItems.addItemAdv(value[i].value,value[i].key,value[i]);
                }
            ]]>
        </handler>
    </netRemoteCallRPC>
  	
  	<!-- Reload Labels cause you need them to display changes -->
    <netRemoteCallRPC name="getLanguageByIdAndVectorLabeled" funcname="getLanguageByIdAndVectorLabeled" 
                    remotecontext="$once{  canvas.languageServiceRPC }" >   
        <attribute name="labels" value="null" />    
        <netparam><method name="getValue">return  canvas.userlang;</method></netparam>
        <netparam><method name="getValue">return parent.labels;</method></netparam> 
        <netparam><method name="getValue">return true;</method></netparam>
        <handler name="ondata" args="value">
            <![CDATA[
                //if($debug) Debug.write("hibRtmpConnection/getLanguageByIdAndVectorLabeled:[",value,"]");
                for (var eg in value) {
                	saveOrUpdaeLabelTagByObject(value[eg]);
                }
                parent.getPropertyById.doCall();
                this.parent.parent._turnoverlist.oncallnext.sendEvent();
            ]]>
        </handler>  
    </netRemoteCallRPC>    
	
	
	<netRemoteCallRPC name="deleteProperty" funcname="deleteProperty" 
                      remotecontext="$once{  canvas.propertyServiceRPC }" >      
  		<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
    	<netparam><method name="getValue">return parent.parent.propertyId;</method></netparam>	
        <handler name="ondata" args="value">
			//if ($debug) Debug.write("deleteProperty ",value);
			if (value>0){
				this.parent.parent._turnoverlist.oncallnext.sendEvent();
				this.parent.onnew.sendEvent();
			}
		</handler>
	</netRemoteCallRPC>		

  	<netRemoteCallRPC name="saveOrUpdateProperty" funcname="saveOrUpdateProperty" 
  		remotecontext="$once{  canvas.propertyServiceRPC }" registerObject="true" >   
		<attribute name="sendObject" value="null" />
		<!-- gets called by Observer
        Long propertyId = Long.valueOf(values.get("propertyId").toString()).longValue();
                
                String propertyName = values.get("propertyName").toString();
                String tooltip = values.get("tooltip").toString();
                Long languages_id = Long.valueOf(values.get("languages_id").toString()).longValue();
                String comment = values.get("comment").toString();
                Boolean isPublic = Boolean.valueOf(values.get("isPublic").toString()).booleanValue();
                Long organisation_id = Long.valueOf(values.get("organisation_id").toString()).longValue();
                String objectTypeName = values.get("objectTypeName").toString();
         -->
  		<method name="prepareCall">
  			this.sendObject = new Object();
            this.sendObject["propertyId"] = this.parent.propertyId;
            this.sendObject["propertyName"] = this.parent.propertyName.getText();
            this.sendObject["tooltip"] = this.parent.tooltip.getText();
            this.sendObject["languages_id"] =  canvas.userlang;
            this.sendObject["isPublic"] = this.parent.isPublic.getValue();
            this.sendObject["organisation_id"] = Number(this.parent.organisation.value);
            this.sendObject["objectTypeName"] = this.parent.objectTypeName.getValue();
            this.sendObject["comment"] = this.parent.comment.getText();
            this.sendObject["propertyValidationTypeId"] = parent.propertyValidationType.getValue();
            this.sendObject["propertyCategoryId"] = parent.propertyCategory.propertyCategoryId;
            this.sendObject["propertyListValues"] = parent._listItems.getAllItemsAdv();
            if ($debug) Debug.write("prepareCall: ",this.sendObject);
  		</method>
  		<netparam><method name="getValue">return canvas.sessionId; </method></netparam>
    	<netparam><method name="getValue">return parent.sendObject;</method></netparam>	  		
    	<handler name="ondata" args="val">
			<![CDATA[
    		//if ($debug) Debug.write("saveOrUpdateproperty ",val);
			if (val>0){
				//Debug.write("updateConfByConfigurationId val greater 0: ",val);
                parent.propertyId = val;
                parent.getPropertyById.doReload = true;
                parent.getPropertyById.doCall();
                //parent.getLanguageByIdAndMax.start = 0;
                //parent.getLanguageByIdAndMax.doCall();
			}
			]]>
    	</handler>
  	</netRemoteCallRPC>	
    
	<!-- content -->
    
    <labelText labelid="987" width="200" y="40" resize="false" fontstyle="bold" />
    
    <labelText labelid="988" width="200" y="70" resize="false" x="2"/>
        <customEdittext name="propertyName" y="70" x="120" width="270" text="" />

    <labelText labelid="989" width="200" y="100" resize="false" x="2"/>
        <customEdittext name="tooltip" y="100" x="120" width="270" text="" />
        
    <labelText labelid="990" width="200" y="130" resize="false" x="2"/>
        <omComboBox name="objectTypeName" y="130" x="120" width="270" editable="false">
        	<!--
            <handler name="oninit">
            	this.addItem(canvas.getLabelName(1343),"");
                this.addItem(canvas.getLabelName(999),"activity");
                this.addItem(canvas.getLabelName(1006),"processtree");
                this.addItem(canvas.getLabelName(1005),"processgroup");
                this.addItem(canvas.getLabelName(1007),"unitFixed");
                this.addItem(canvas.getLabelName(1002),"departementFixed");
                this.addItem(canvas.getLabelName(1000),"companyFixed");
                this.addItem(canvas.getLabelName(1001),"connector");
                this.addItem(canvas.getLabelName(1003),"flow");
                this.addItem(canvas.getLabelName(1004),"issueflow");
                this.addItem(canvas.getLabelName(1314),"datacarrier");
                this.selectItemAt(0);
            </handler> 
             -->
            <handler name="oninit">
                this.selectItemAt(0);
            </handler>
            <labelTextListItem datapath="diagramObjectTypesDS:/item/" 
                               value="$path{'name/text()'}"
                               labelid="$path{'labelid/text()'}" />
        </omComboBox>
        
    <labelText labelid="1322" width="200" y="160" resize="false" x="2"/>
        <customEdittext name="propertyCategory" y="160" x="120" width="208" text="">
        	<attribute name="propertyCategoryId" value="0" type="number" />
        	<method name="search">
        		new lz.searchPropertyCategory(parent,{refObj:this,
                          x:this.x,y:this.y-2
                      });
        	</method>
        	
        	<method name="addItem">
        		new lz.adminSaveOrUpdatePropertyCategory(canvas.main_content._content.inner,{
            		  x:this.getAttributeRelative("x",canvas)-200,
            		  y:this.getAttributeRelative("y",canvas)-120,
            		  refObj:this
            		})
        	</method>
        	
        	<method name="setPropertyCategory" args="text,categoryId">
        		this.setAttribute("text",text);
        		this.propertyCategoryId = categoryId;
        	</method>
        </customEdittext>
        
        <propertyCategoryIcons name="_propertyCategoryIcons" y="160" x="330" />
    
    <labelCheckbox name="isPublic" labelid="991" y="192" x="6">
        <handler name="onvalue">
            if (this.getValue()) {
                //parent.organisation.selectItemAt(0);
            }
        </handler>
    </labelCheckbox>  
           
    <labelText labelid="992" width="200" y="220" resize="false" x="2"/>   
        <omDynamicComboBox name="organisation" y="220" x="120" width="270">
        	<handler name="initContent">
        		<![CDATA[
            		this.initList();
            		
            		this.cList.addItem(canvas.getLabelName(996),"0");
            		
                    for (var i=0;i<this.valueList.length;i++){
                        //set to null as only Admins will do that
                        //they do not need a orgusre Object, as they have all menu options given
                        this.cList.addItem(this.valueList[i].name,this.valueList[i].organisation_id);
                    }   
                    
                    this.doDefaultSelection();
                ]]>
        	</handler>
        </omDynamicComboBox>
        
        <!--
        <omComboBox name="organisation" y="220" x="120" width="270" editable="false">
            <method name="loadDefault">
                <![CDATA[
                    this.selectItemAt(0);
                ]]>
            </method>
            <method name="addItemWithObject" args="txt,val,obj,orgUser">
                new lz.textlistitem(this,{
                    text:txt,value:val,obj:obj,orgUser:orgUser
                })
            </method>  
        </omComboBox>
         -->
        
    <labelText labelid="1015" width="200" y="250" resize="false" x="2"/>   
        <omComboBox name="propertyValidationType" y="250" x="120" width="270" editable="false">
        	<handler name="oninit">
                this.selectItemAt(0);
            </handler>
            <handler name="onselect" args="sel">
                if (sel.value == "8") {
                    parent._listValuesLabel.setAttribute("fgcolor",0x000000);
                    parent._listItems.setAttribute("opacity",1);
                    parent._listItemAdd.setAttribute("opacity",1);
                } else {
                    parent._listValuesLabel.setAttribute("fgcolor",0xCCCCCC);
                    parent._listItems.setAttribute("opacity",0.3);
                    parent._listItemAdd.setAttribute("opacity",0.3);
                }
            </handler>
            <labelTextListItem datapath="propertyValidationTypes:/item/" 
                               value="$path{'propertyValidationTypeId/text()'}"
                               labelid="$path{'labelId/text()'}" />
        </omComboBox>
        
	<labelText name="_listValuesLabel" labelid="1355" width="200" y="280" resize="false" x="2"/>
        <simpleValueList name="_listItems" y="280" x="120" width="270" height="190" 
            multiselect="true" itemclassname="simpleListItemAdv"/>   
            <view x="400" y="280" name="_listItemAdd" 
            	  oninit="this.setSource(canvas.getIconPathByName('icon_add_item_website_rsc'))">
                <method name="addItem" args="obj">
                    //if ($debug) Debug.write("addItem",obj,obj.obj);
                    this.parent._listItems.addItemAdv(obj.value,obj.value,obj);
                </method>
                <handler name="onclick">
                    //if ($debug) Debug.write("webSiteAdminSearchBox");
                    new lz.propertyEditorSearchListItems(canvas,{refObj:this});
                </handler>
                <labelTooltip labelid="1356" />
            </view> 
	   

    <labelText labelid="995" width="200" y="480" resize="false" x="2"/>
        <customScrollEdittext name="comment" y="480" x="120" width="270" 
            height="100" text="" />    
         
</class>

</library>
