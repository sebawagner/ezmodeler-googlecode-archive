<?xml version="1.0" encoding="UTF-8" ?>
<canvas debug="true" width="100%" height="100%" >
    <debug fontsize="12" oninit="Debug.showInternalProperties = true" />
    
    <security>
        <allow>
            <pattern>^org.i4change.app.http.javarpc\.DiagramServiceRPC</pattern>
        </allow>
    </security>
    
    <attribute name="currentNumber" value="200" type="number"/>
    
    <!-- See WEB-INF/classes/TypesExample.java for java source. -->
    <javarpc name="diagramServiceRPC" scope="webapp"
             autoload="false" objectreturntype="javabean"
             remoteclassname="org.i4change.app.http.javarpc.DiagramServiceRPC">

        <handler name="onload">
            // Set buttons visible only after JavaRPC object loads
            //if ($debug) Debug.write('onload:', this);
        </handler>

        <handler name="ondata" args="res">
            //if ($debug) Debug.write('(types ondata) response is:', res);
        </handler>

        <handler name="onerror" args="errmsg">
            //if ($debug) Debug.write('(types onerror) error:', errmsg);
        </handler>
        
        <remotecall name="getTest1" funcname="getTest1" >    
            <param><method name="getValue">return canvas.currentNumber</method></param>  
            <handler name="ondata" args="value">
                //if ($debug) Debug.write("getTest1: ",value);
            </handler>
        </remotecall>
         
        <remotecall name="getTest2" funcname="getTest2" >   
            <param><method name="getValue">return canvas.currentNumber</method></param>     
            <handler name="ondata" args="value">
                //if ($debug) Debug.write("getTest2: ",value);
            </handler>
        </remotecall>
        
    </javarpc>
    
    <simplelayout axis="y" spacing="2" />
    
    <button text="doLoad">
        <handler name="onclick">
            diagramServiceRPC.load();
        </handler>
    </button>
    
    
    <button text="doLoad">
    	<handler name="onclick">
    		diagramServiceRPC.getTest1.invoke();
    	</handler>
    </button>
    
    <button text="doInvoke">
    	<handler name="onclick">
    		diagramServiceRPC.getTest2.invoke();
    	</handler>
    </button>
    
</canvas>
