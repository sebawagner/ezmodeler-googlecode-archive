<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
	
<class name="drawToolBarItem" extends="view" bgcolor="0x000000" 
	   width="26" height="26">
	
	<attribute name="resoureceItem" value="" type="string" />
	<attribute name="modi" value="" type="string" />
	<attribute name="labelid" value="0" type="number" />
    
    <attribute name="resoureceItemX" value="2" type="number" />
    <attribute name="resoureceItemY" value="2" type="number" />
	
	<attribute name="itemRef" value="null" />
	
	<attribute name="setSelectionToItem" value="true" type="boolean" />
	<attribute name="_isselected" value="false" type="boolean" />
	
	<handler name="onmouseover">
        if (!this._isselected) this._area.setAttribute('bgcolor',canvas.baseMousecolorizer);
    </handler>
    <handler name="onmouseout">
        if (!this._isselected) this._area.setAttribute('bgcolor',0xFFFFFF);
    </handler>
	
	<view x="1" y="1" width="$once{ parent.width-2 }" name="_area" 
		  height="$once{ parent.height-2 }" bgcolor="0xFFFFFF" />
	<view x="$once{ parent.resoureceItemX }" y="$once{ parent.resoureceItemY }" height="22" 
          width="$once{ parent.width-(parent.resoureceItemX*2) }" 
		  resource="$once{ parent.resoureceItem }" />
    
    <!--
        Stupid Laszlo Compiler does not allow Methods to get too big
     -->
    
    <handler name="onmousedown">
        <![CDATA[
            var diagramRef = canvas.currentDiagramRef;
            if (this.modi == "companyPending") {
                if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                    var targetx = canvas.defaultRoleWidth/2;
                    var targety = canvas.defaultRoleHeight/2;
                    ////if ($debug) Debug.write("x,y: ",canvas.getMouse('x'),canvas.getMouse('y'));
                    this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                        targetwidth:(canvas.defaultUnitWidth*4)+100,
                                        targetheight:canvas.defaultUnitHeight+40,
                                        width:0,height:0,
                                        objectType:'companyPending',
                                        x:canvas.getMouse('x'),
                                        y:canvas.getMouse('y'),
                                        targetx:targetx,targety:targety,
                                        strokeColor:0x032FDA,fillColor:0x5073FC
                                    });
                    //if ($debug) Debug.write("itemRef: ",itemRef);
                }
            } else if (this.modi == "departementPending") {
                if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                    var targetx = canvas.defaultRoleWidth/2;
                    var targety = canvas.defaultRoleHeight/2;
                    ////if ($debug) Debug.write("x,y: ",canvas.getMouse('x'),canvas.getMouse('y'));
                    this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                        targetwidth:(canvas.defaultUnitWidth*4)+100,
                                        targetheight:canvas.defaultUnitHeight+40,
                                        width:0,height:0,
                                        objectType:'departementPending',
                                        x:canvas.getMouse('x'),
                                        y:canvas.getMouse('y'),
                                        targetx:targetx,targety:targety,
                                        strokeColor:0x2D56FD,fillColor:0x89A2FE
                                    });
                    //if ($debug) Debug.write("itemRef: ",itemRef);
                }
            } else if (this.modi == "unitPending") {
                if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                    var targetx = canvas.defaultRoleWidth/2;
                    var targety = canvas.defaultRoleHeight/2;
                    ////if ($debug) Debug.write("x,y: ",canvas.getMouse('x'),canvas.getMouse('y'));
                    this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                        targetwidth:(canvas.defaultUnitWidth*4)+100,
                                        targetheight:canvas.defaultUnitHeight+40,
                                        width:0,height:0,
                                        objectType:'unitPending',
                                        x:canvas.getMouse('x'),
                                        y:canvas.getMouse('y'),
                                        targetx:targetx,targety:targety,
                                        strokeColor:0x3F65FC,fillColor:0xB4C4FE
                                    });
                    //if ($debug) Debug.write("itemRef: ",itemRef);
                }
            } else if (this.modi == "unit" || this.modi == "unitFixed") {
                if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                    var targetx = canvas.defaultRoleWidth/2;
                    var targety = canvas.defaultRoleHeight/2;
                    ////if ($debug) Debug.write("x,y: ",canvas.getMouse('x'),canvas.getMouse('y'));
                    this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                        targetwidth:(canvas.defaultUnitWidth*4)+100,
                                        targetheight:canvas.defaultUnitHeight+40,
                                        width:0,height:0,
                                        x:canvas.getMouse('x'),
                                        y:canvas.getMouse('y'),
                                        targetx:targetx,targety:targety,
                                        strokeColor:0x3F65FC,fillColor:0xB4C4FE
                                    });
                    //if ($debug) Debug.write("itemRef: ",itemRef);
                } else if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 3){
                    var targetx = canvas.defaultUnitWidth/2;
                    var targety = canvas.defaultUnitHeight/2;
                    this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                        targetwidth:canvas.defaultUnitWidth,
                                        targetheight:canvas.defaultUnitHeight,
                                        width:0,height:0,
                                        x:canvas.getMouse('x'),
                                        y:canvas.getMouse('y'),
                                        targetx:targetx,targety:targety,
                                        strokeColor:0x3F65FC,fillColor:0xB4C4FE
                                    });
                    //if ($debug) Debug.write("itemRef: ",itemRef);
                }
            } else if (this.modi == "activity") {
                var targetx = canvas.defaultActicityWidth/2;
                var targety = canvas.defaultActicityHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultActicityWidth,
                                    targetheight:canvas.defaultActicityHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0xFF6600,fillColor:0xFFFFFF
                                });
            } else if (this.modi == "processtree" || this.modi == "process") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0xFFCC00,fillColor:0xFFFF00
                                });
            } else if (this.modi == "processgroup") {
                var targetx = canvas.defaultProcessGroupWidth/2;
                var targety = canvas.defaultProcessGroupHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultProcessGroupWidth,
                                    targetheight:canvas.defaultProcessGroupHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0xFF6600,fillColor:0xFF9900
                                });
            } else if (this.modi == "departement") {
                var targetx = canvas.defaultDepartementWidth/2;
                var targety = canvas.defaultDepartementHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:(canvas.defaultUnitWidth*4)+100,
                                    targetheight:canvas.defaultUnitHeight+40,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0x2D56FD,fillColor:0x89A2FE
                                });
            } else {
            	this.doUpdateMouseDown();
            }
            
            if (this.itemRef != null) {
            	canvas.currentDragObject = this.itemRef;
            }
        ]]>
    </handler>
    
    <!--
        Stupid Laszlo Compiler does not allow Methods to get too big
     -->
    <method name="doUpdateMouseDown">
    	<![CDATA[
    	   
    	   if (this.modi == "departementFixed") {
                var targetx = canvas.defaultDepartementWidth/2;
                var targety = canvas.defaultDepartementHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultDepartementWidth,
                                    targetheight:canvas.defaultDepartementHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0x2D56FD,fillColor:0x89A2FE
                                });
            } else if (this.modi == "company") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:(canvas.defaultUnitWidth*4)+100,
                                    targetheight:canvas.defaultUnitHeight+40,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0x032FDA,fillColor:0x5073FC
                                });
            } else if (this.modi == "companyFixed") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0x032FDA,fillColor:0x5073FC
                                });
            } else if (this.modi == "flow") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    objectType:'flow',
                                    strokeColor:0x009900,fillColor:0x00FF33,
                                    strokeColor2:0xCC0000,fillColor2:0xFF3300
                                });
            } else if (this.modi == "inputflow") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    objectType:'inputflow',
                                    strokeColor:0x009900,fillColor:0x00FF33,
                                    strokeColor2:0xCC0000,fillColor2:0xFF3300
                                });
            } else if (this.modi == "outputflow") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    objectType:'outputflow',
                                    strokeColor:0x009900,fillColor:0x00FF33,
                                    strokeColor2:0xCC0000,fillColor2:0xFF3300
                                });
            } else if (this.modi == "issueflow") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:canvas.defaultCompanyWidth,
                                    targetheight:canvas.defaultCompanyHeight,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    objectType:'issueflow',
                                    strokeColor:0x009900,fillColor:0x00FF33,
                                    strokeColor2:0xCC0000,fillColor2:0xFF3300
                                });
            } else if (this.modi == "letter") {
                var targetx = canvas.defaultCompanyWidth/2;
                var targety = canvas.defaultCompanyHeight/2;
                ////if ($debug) Debug.write("x,y: ",x,y);
                this.itemRef =  new lz.dragViewDiagramObjects(canvas,{
                                    targetwidth:160,
                                    targetheight:120,
                                    width:0,height:0,
                                    x:canvas.getMouse('x'),
                                    y:canvas.getMouse('y'),
                                    targetx:targetx,targety:targety,
                                    strokeColor:0x000000,fillColor:0xDDDDDD
                                });
            } else {
                //if ($debug) Debug.warn("Unkown Modi: ",this.modi);
            }
    	]]>
    </method>
    
    <!--
        Stupid Laszlo Compiler does not allow Methods to get too big
     -->
	<handler name="onmouseup">
        <![CDATA[
			//if (!this._isselected) this.setAttribute('bgcolor',canvas.baseMousecolorizer);
			this.__labeltooltip.destroyLabel();
			parent.parent.setSelection(this);
            //if ($debug) Debug.write("onmouseup #### ",this);
            ////if ($debug) Debug.write("onmouseup ",parent.parent.parent.parent.parent.parent.parent.parent);
            var diagramRef = canvas.currentDiagramRef;
            if (this.itemRef != null) {
                this.itemRef.close();
                //if ($debug) Debug.write(parent.getMouse('x'),0,parent.getMouse('x'),(parent.width),parent.getMouse('y'),this.y,parent.getMouse('y'),(parent.height));
                //38 28 38 54 139 139 26  
                if (parent.getMouse('x')>=0 && parent.getMouse('x')<=(parent.width) && parent.getMouse('y')>=0 && parent.getMouse('y')<=(parent.height)){
                    //if ($debug) Debug.warn("Clicked Inside Item, use default Location");
                } else {
                    if (this.modi == "unit" || this.modi == "unitFixed") {
                        ////if ($debug) Debug.write("this.obj ",this.obj);
                        ////if ($debug) Debug.write("this.obj.name,this.obj.diagramObjectId: ",this.obj.name,this.obj.diagramObjectId)
                        if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.drawUnitDrag(
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultRoleWidth/2),
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultRoleHeight/2));
                        } else if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 3){
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.drawFixedUnitDrag(
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultUnitWidth/2),
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultUnitHeight/2));
                        }
                    } else if (this.modi == "activity") {
                        diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endActivityDrag(
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultActicityWidth/2),
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultActicityHeight/2)
                            );
                    } else if (this.modi == "processtree" || this.modi == "process") {
                        if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 2 || 
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 4) {
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endProcessDrag(
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2),
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2)
                                );
                        } else if (diagramRef._scrollcontent.dragArea.contentArea._currentBoard.diagramType == 1){
                            diagramRef._scrollcontent.dragArea.contentArea._currentBoard.drawFixedProcessDrag(
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2),
                                    diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2)
                                );
                        }
                    } else if (this.modi == "processgroup") {
                        diagramRef._scrollcontent.dragArea.contentArea._currentBoard.drawFixedProcessgroupDrag(
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultProcessGroupWidth/2),
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultProcessGroupHeight/2)
                            );
                    } else if (this.modi == "departementFixed") {
                        diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endDepartementFixedDrag(
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultDepartementWidth/2),
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultDepartementHeight/2)
                            );
                    } else if (this.modi == "companyFixed") {
                        diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endCompanyDrag(
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2),
                                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2)
                            );
                    } else {
                    	this.onmouseupHandler();
                    }
                }
            }
            
            //Reset Drag Object
            canvas.currentDragObject = null;
        ]]>
    </handler>
    
    <!--
        Stupid Laszlo Compiler does not allow Methods to get too big
     -->
    <method name="onmouseupHandler">
    	<![CDATA[
    	
    	   var diagramRef = canvas.currentDiagramRef;
    	
           if (this.modi == "inputflow") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endInputflowDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "outputflow") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endOutputflowDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "issueflow") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endIssueflowDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "unitPending") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endUnitPendingDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "departementPending") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endDepartementPendingDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "departement") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endDepartementDragFlowDiagram(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "company") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endCompanyDragFlowDiagram(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "companyPending") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-(canvas.defaultCompanyWidth/2);
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-(canvas.defaultCompanyHeight/2);
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endCompanyPendingDrag(
                        this._tempxValue,this._tempyValue);
            } else if (this.modi == "letter") {
                this._tempxValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('x')-80;
                this._tempyValue = diagramRef._scrollcontent.dragArea.contentArea._currentBoard.getMouse('y')-60;
                diagramRef._scrollcontent.dragArea.contentArea._currentBoard.endLetterDrag(
                        this._tempxValue,this._tempyValue);
            } else {
                if ($debug) Debug.warn("Unkown Modi ",this.modi);
            }
    	
    	]]>
    </method> 
     
        
	<labelTooltip name="__labeltooltip" labelid="$once{ parent.labelid }" />
</class>	

<class name="drawToolBarSeperator" extends="view" bgcolor="0x000000"
	   width="54" height="1" ></class>

</library>
