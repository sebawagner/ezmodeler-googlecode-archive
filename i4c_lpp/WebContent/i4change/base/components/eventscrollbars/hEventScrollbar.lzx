<library>

    <!--- A scrollbar manipulates the x or y position of a target view that is
          clipped by its parent, creating a scrolling effect when the user
          clicks up/down arrows, clicks on the scroll track or drags the
          thumb. -->
<class name="hEventScrollbar" extends="basescrollbar"
    bgcolor="0x595959"
    axis="x">
    
    <event name="onFinishedDrag" />

    <!--- If this is defined, it will be used as the scrollbar's background
          color when it is disabled. If not provided, the scrollbar will use
          the bgcolor of its closest parent that has a bgcolor defined.  -->
    <attribute name="disabledbgcolor" value="null"/>

    <!--- @keywords private reference="canvas" -->
    <handler name="oninit" reference="canvas">
    	this._showEnabled();
    </handler>
    <method name="_showEnabled" > <![CDATA[
        if (!_enabled) {
            var newbgcolor = this.disabledbgcolor;
            if (newbgcolor == null) {
                var p = immediateparent;
                while (p.bgcolor == null && p != canvas) {
                    p = p.immediateparent;
                }
                newbgcolor = p.bgcolor;
                if (newbgcolor == null) newbgcolor = 0xffffff;
            }
            this.setAttribute('bgcolor',newbgcolor);
        } else {
            this.setAttribute('bgcolor',0x595959);
        }
        super._showEnabled();
    ]]>
    </method>

    <attribute name="height" value="14"/>

    <!-- left arrow -->
    <view name="leftarrow">
        <basescrollarrow x="1" y="1"
            resource="lzscrollbar_xbuttonleft_rsc"
            direction="-1">
            <handler name="onmouseup">
                parent.parent.onFinishedDrag.sendEvent();
            </handler>
        </basescrollarrow>
    </view>
    <view name="scrolltrack" height="12" y="1">
        <!-- top of the scroll track -->
        <basescrolltrack name="top"
            resource="lzscrollbar_xtrack_rsc" stretches="width"
            overResourceNumber="0"
            downResourceNumber="2"
            disabledResourceNumber="3"
            direction="-1">
            <attribute name="width" value="${parent.thumb.x}"/>
            <attribute name="height" value="${parent.height}"/>
            <handler name="onmouseup">
                parent.parent.onFinishedDrag.sendEvent();
            </handler>  
        </basescrolltrack>

        <!-- thumb -->
         <basescrollthumb name="thumb" y="0">
             <view resource="lzscrollbar_xthumbleft_rsc"/>
             <view resource="lzscrollbar_xthumbmiddle_rsc" stretches="both"/>
             <view resource="lzscrollbar_xthumbright_rsc"/>
             <stableborderlayout axis="x"/>
             <!-- note: stableborderlayout only acts on the first three views -->
             <view resource="lzscrollbar_xthumbgripper_rsc" y="1"
                 width="${Math.min(200, parent.width-16)}"
                 clip="true" align="center" >
             </view>
            <handler name="onmouseup">
                parent.parent.onFinishedDrag.sendEvent();
            </handler>             
        </basescrollthumb>

        <!-- bottom of the scroll track -->
        <basescrolltrack name="bottom"
            resource="lzscrollbar_xtrack_rsc" stretches="width"
            overResourceNumber="0"
            downResourceNumber="2"
            disabledResourceNumber="3">
            <attribute name="x" value="${parent.thumb.x+parent.thumb.width}"/>
            <attribute name="width"
                value="${parent.width - parent.thumb.x - parent.thumb.width}"/>
            <attribute name="height" value="${parent.height}"/>
            <handler name="onmouseup">
                parent.parent.onFinishedDrag.sendEvent();
            </handler>  
        </basescrolltrack>


    </view>     <!-- scrolltrack -->

    <!-- right arrow -->
    <view width="14">
        <basescrollarrow name="rightarrow" y="1"
            resource="lzscrollbar_xbuttonright_rsc">
            <handler name="onmouseup">
                parent.parent.onFinishedDrag.sendEvent();
            </handler>
        </basescrollarrow>
    </view>
    <stableborderlayout axis="x"/>

    <state apply="${parent.othersb}">
        <view name="patch" x="${parent.width}"
            bgcolor="${(parent._enabled || parent.othersb._enabled)
                ? 0xbdbdbd : parent.disabledbgcolor}"
            width="${parent.height}" height="${parent.height}"/>
    </state>

</class>
</library>
