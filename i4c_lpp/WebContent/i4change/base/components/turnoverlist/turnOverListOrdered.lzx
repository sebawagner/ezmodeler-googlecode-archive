<?xml version="1.0" encoding="UTF-8" ?>
<library>
    
<resource name="sort_up_rsc" src="resources/1uparrow.png" />    
<resource name="sort_down_rsc" src="resources/1downarrow.png" />   


<class name="turnOverListHeaderItemOrdered" extends="turnOverListHeaderItem">

    <attribute name="orderBy" value="" type="string" />
    <attribute name="asc" value="true" type="boolean" />
    <attribute name="isSelected" value="false" type="boolean" />
    
    <handler name="oninit">
        if (this.isSelected) {
            parent.parent.parent.updateOrder(this);
        }
    </handler>
    
    <handler name="onclick">
        parent.parent.parent.updateOrder(this);
    </handler>
    
    <view name="_sortUp" visibility="hidden" stretches="both" width="8" height="8" y="6"
        x="${parent.width - 13 }" resource="sort_up_rsc" />
    <view name="_sortDown" visibility="hidden" stretches="both" width="8" height="8" y="6"
        x="${parent.width - 13 }" resource="sort_down_rsc" />

</class>

<!--- common TurnOverList view class. -->
<class name="turnOverListOrdered" extends="turnOverList">
    
    <attribute name="currentSelectedOrder" value="null" />
    
    <event name="onUpdateOrder" />
    
    <method name="updateOrder" args="itemRef">
        <![CDATA[
	        //only do that if the previous orderBy != new orderby
	        //if (this.currentSelectedOrder == null || 
            //        this.currentSelectedOrder.orderBy != itemRef.orderBy){
		        if (itemRef.isSelected) {
		            itemRef.asc = !itemRef.asc;
		        } else {
		            itemRef.isSelected = true;
		        }
		        if (itemRef.asc) {
		            itemRef._sortUp.setAttribute('visibility','hidden');
		            itemRef._sortDown.setAttribute('visibility','visible');
		        } else {
		            itemRef._sortUp.setAttribute('visibility','visible');
		            itemRef._sortDown.setAttribute('visibility','hidden'); 
		        }
		        
		        //do not perform search on initial Selection
		        var isInitSelect = false;
		        if (this.currentSelectedOrder != null) {
                    if (this.currentSelectedOrder.orderBy != itemRef.orderBy) {
			            this.currentSelectedOrder.isSelected = false;
			            this.currentSelectedOrder._sortUp.setAttribute('visibility','hidden');
			            this.currentSelectedOrder._sortDown.setAttribute('visibility','hidden'); 
                    }
		        } else {
		            isInitSelect = true;
		        }
		        this.currentSelectedOrder = itemRef;
		        
		        //if ($debug) Debug.write("updateOrder: ",itemRef,itemRef.orderBy,itemRef.asc,isInitSelect);
		        this.setAttribute('orderby',itemRef.orderBy);
		        this.setAttribute('asc',itemRef.asc);
		        
		        if (!isInitSelect){
		            this.onUpdateOrder.sendEvent();
	            }
	        //}
        ]]>
    </method>

    <method name="addHeaderItemOrdered" args="labelid,width,orderBy,asc,isSelected" >
        new lz.turnOverListHeaderItemOrdered(this._innerlisthead._inn,{
                labelid:labelid,width:width,
                orderBy:orderBy,asc:asc,isSelected:isSelected,
                subviewsid:this._innerlisthead._inn.subviews.length
            });
    </method> 
	
</class>

</library>
