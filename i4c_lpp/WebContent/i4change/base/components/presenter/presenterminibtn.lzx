<?xml version="1.0" encoding="UTF-8" ?>
<library>

<class name="presenterminibtn" extends="view" width="300" height="20" y="1"
    bgcolor="$once{ canvas.basebgcolorizer }">
    
    <attribute name="btnName" value="" type="string" />
    <attribute name="objRef" value="null" />

    <attribute name="zielx" value="200" type="number" />
    <attribute name="zielwidth" value="100" type="number" />    
    
    <attribute name="isactive" value="true" type="boolean" />
    <attribute name="closeable" value="true" type="boolean" />
    
    <handler name="oninit">
        this.calcTextWidth();
        if (this.isactive) {
            parent.sendActiveWindow(this,this.objRef);
            this._minimizebtn_mo.setAttribute('visibility','hidden');
            this._minimizebtn_dn.setAttribute('visibility','visible');
        } else {
            this._minimizebtn_mo.setAttribute('visibility','hidden');
            this._minimizebtn_dn.setAttribute('visibility','hidden');
        }   
    </handler>
    <handler name="onwidth">
        if (this.isinited){
            this.calcTextWidth();
        }
    </handler>
    
    <method name="calcTextWidth">
        <![CDATA[
            ////if($debug)  Debug.write(this,this._text,this._text.getTextWidth());
            if (this._text.getTextWidth()>(this.width-24)) {
                this._long.setAttribute('visibility','visible');
                this._text.setAttribute('width',this.width-26);
            } else {
                this._long.setAttribute('visibility','hidden');
                this._text.setAttribute('width',this.width-18);
            }
        ]]>        
    </method>
        
    <handler name="onclick">
        this._minimizebtn_mo.setAttribute('visibility','visible');
        this._minimizebtn_dn.setAttribute('visibility','hidden');
        ////if($debug)  Debug.write("this.objRef.visibility: ",this.objRef.visibility);
        //if($debug)  Debug.write("this.objRef: ",this.objRef);
        if (this.objRef.visibility == 'hidden') {
            //if($debug)  Debug.write("this.objRef.parent.parent: ",this.objRef.parent.parent);
            parent.sendActiveWindow(this,this.objRef);
            if (this.isactive) {
	            this._minimizebtn_mo.setAttribute('visibility','hidden');
	            this._minimizebtn_dn.setAttribute('visibility','visible');
	        } else {
	            this._minimizebtn_mo.setAttribute('visibility','hidden');
	            this._minimizebtn_dn.setAttribute('visibility','hidden');
	        }  
        }
        this._close.setAttribute('opacity',0.7)
    </handler>
    
    <method name="sendAnniComplete">
        this._minimizebtn_mo.setAttribute('visibility','visible');
        this._minimizebtn_dn.setAttribute('visibility','hidden');
        this.objRef.setAttribute('visibility','visible');
        this.objRef.activate();
    </method>
    
    <handler name="onmouseover">
        this._minimizebtn_mo.setAttribute('visibility','visible');
        this._minimizebtn_dn.setAttribute('visibility','hidden');
    </handler>
    <handler name="onmouseout">
        if (this.isactive) {
            this._minimizebtn_mo.setAttribute('visibility','hidden');
            this._minimizebtn_dn.setAttribute('visibility','visible');
        } else {
            this._minimizebtn_mo.setAttribute('visibility','hidden');
            this._minimizebtn_dn.setAttribute('visibility','hidden');
        }        
    </handler>
    <handler name="onmousedown">
        this._minimizebtn_mo.setAttribute('visibility','hidden');
        this._minimizebtn_dn.setAttribute('visibility','visible');
    </handler>
    <handler name="onmouseup">
        this._minimizebtn_mo.setAttribute('visibility','visible');
        this._minimizebtn_dn.setAttribute('visibility','hidden');
    </handler>
    
    <method name="sendActiveWindow" args="win">
        this.parent.sendActiveWindow(this,win);
    </method>    

    
    <view name="_minimizebtn_mo" width="${ parent.width-2 }" height="18"
        bgcolor="white" opacity="0.3" visibility="hidden" x="1" y="1" />

    <view name="_minimizebtn_dn" width="${ parent.width-2 }" height="18"
        bgcolor="black" opacity="0.3" visibility="hidden" x="1" y="1" />
   
    <text text="${ parent.btnName }" fgcolor="0xFFFFFF" resize="false" 
        x="1" fontsize="12" name="_text" />
    
    <!--
    opacity="${ ((parent.isactive) ? 1 : 0.5 ) }"
     -->
    <view y="2" x="${ parent.width-18 }" name="_close" opacity="0.7"
          visibility="$once{ (parent.closeable) ? 'visible' : 'hidden' }"  
        oninit="this.setSource(canvas.getIconPathByName('icon_tabbar_close_rsc'))"
        onmouseover="this.setAttribute('opacity',1)" 
        onload="this.setAttribute('opacity',0.7)"
        onmouseout="this.setAttribute('opacity',0.7)" >
        <!--
        onmouseover="this.setAttribute('frame',2)"
        onmouseout="this.setAttribute('frame',1)"
        onmousedown="this.setAttribute('frame',3)"
        onmouseup="this.setAttribute('frame',1)"-->
        <handler name="onclick">
            this.setAttribute('frame',2);
            this.parent.objRef.close();
        </handler>
        <labelTooltip labelid="629" />
    </view>     
    
    <text y="1" name="_long" text="..." fgcolor="0xFFFFFF"
        x="${ parent.width-29 }" fontsize="12" />  

    <labelTooltip text="${ parent.btnName }" />
</class>

</library>
