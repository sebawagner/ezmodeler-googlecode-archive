<?xml version="1.0" encoding="UTF-8" ?>
<library>
	
<class name="customEdittext_dev" extends="view" bgcolor="0x666666" height="18">
	<attribute name="regexpType" value="none" type="string" />
	<attribute name="password" value="false" type="boolean" />
	<attribute name="enabled" value="true" type="boolean" />
	<attribute name="text" value="" type="string" />
	<attribute name="regexpLabelid" type="number" />
	<attribute name="labelid" type="number" />
	<method name="setText" args="txt">
		this._customEdittextInner.setAttribute("text",txt);
	</method>
	<method name="getText">
		this._customEdittextInner.getText();
	</method>
	<customEdittextInner name="_customEdittextInner" x="1" y="1" text="${ parent.text }" 
						 password="$once{ parent.password }"
						 width="$once{ parent.width }" height="$once{ parent.height }" />
						 
</class>	
	
<class name="customEdittextInner" extends="inputtext" fontsize="10" bgcolor="0xEEEEEE" >
	
	<attribute name="labelid" type="number" value="$once{ parent.labelid }" 
			   setter="setLabelId(labelid)" />
	
	<attribute name="isvalidInput" value="true" type="boolean" />
	<attribute name="regexpType" value="$once{ parent.regexpType }" type="string" />
	<attribute name="regexpLabelid" value="$once{ parent.regexpLabelid }" type="number" />
	<attribute name="preText" value="" type="string" />

	<handler name="onfocus">
    	this.preText = this.getText();
		this.setAttribute('bgcolor',"0xFFFFFF");
	</handler>
	
	<handler name="onblur">
		this.setAttribute('bgcolor',"0xEEEEEE");
		<![CDATA[
			if (this.regexpType!="none"){
				////if ($debug) Debug.write("onblur");
				////if ($debug) Debug.write("onblur check ",this.regexpType);		
				var fieldValue = this.getText();
				if (this.regexpType=="email") {
					var regExpV = ".+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,3}|[0-9]{1,3})(\\]?)";
					this.regexpLabelid = 519;
				} else if (this.regexpType=="date"){
					var regExpV = "(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d";
					this.regexpLabelid = 518;
				} else if (this.regexpType=="float"){
					var regExpV = "[0-9]*\\.[0-9]*";
					this.regexpLabelid = 1318;
				} else if (this.regexpType=="phone"){
					var regExpV = "\\+[0-9]+ [0-9]+ [0-9\\-]+";
					this.regexpLabelid = 522;
				} else if (this.regexpType=="number"){
					var regExpV = "[0-9]*";
					this.regexpLabelid = 1319;
				} else if (this.regexpType=="time"){
					var regExpV = "([01][0-9]|2[0-3]):[0-5][0-9]";
					this.regexpLabelid = 1320;
				}
				////if ($debug) Debug.write("regExpV: ",regExpV);
		  	    var fieldValue = this.getText();
		  	    var regex = "/^"+regExpV+"$/";
		  	    
		  	    var t = "( !( (\""+ fieldValue +"\".replace("+ regex +" ,\"\").length == 0) && ( "+ regex +".test(\""+ fieldValue +"\")) ) ) ";
	            this.bumb_1.callIt(t);
				
			}
		]]>
	</handler>
	
    <browserjavascriptcallback name="bumb_1">
        <handler name="onvalue" args="val">
            if(val=="true"){
                //Debug.warn("FALSE: ",parent.parent,parent.parent.regexperror);
              	disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas)+12,
              					y:this.getAttributeRelative('y',canvas)+26,
              					regexptext:canvas.getLabelName(parent.regexpLabelid)}));
              	parent.usePreContent();
              	parent.setAttribute('isvalidInput',false);
            } else {
              	if(!this.parent.isvalidInput){
                	disablesTooltips(null);
              	}
              	parent.setAttribute('isvalidInput',true);
            }
        </handler>
    </browserjavascriptcallback>    	

    
    <method name="setLabelId" args="_labelid" >
        this.labelid = _labelid;
        this.setAttribute("text",canvas.getLabelName(this.labelid));
    </method>
    
  	<method name="usePreContent">
  		this.setAttribute('text',this.preText);
  	</method>    
  	
    <!--
    <browserjavascriptcallback name="bumb_1">
        <handler name="onvalue" args="val">
            if(val=="true"){
            	if(parent.parent.isreport){
                    Debug.write("TRUE: ",parent.parent,parent.parent.regexperror);
              		disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas)+12,y:this.getAttributeRelative('y',canvas)+12,regexptext:'Invalid Input'}));
              	} else {
                    Debug.write("FALSE: ",parent.parent,parent.parent.regexperror);
              		disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas)+12,y:this.getAttributeRelative('y',canvas)+12,regexptext:'Invalid Input'}));
              	}
              	parent.usePreContent();
              	parent.setAttribute('isvalidInput',false);
            } else {
              	if(!this.parent.parent.getAttribute('isvalidInput')){
                	disablesTooltips(null);
              	}
              	parent.setAttribute('isvalidInput',true);
              	if (this.parent.parent.textblur) this.parent.parent.textblur.sendEvent(); 
            }
        </handler>
    </browserjavascriptcallback> 
    -->       
    
</class>	

<class name="customEdittext" extends="edittext" fontsize="11" height="22" >
	
	<attribute name="labelid" type="number" setter="setLabelId(labelid)" />
	
	<attribute name="isvalidInput" value="true" type="boolean" />
	<attribute name="regexpType" value="none" type="string" />
	<attribute name="regexpLabelid" type="number" />
	<attribute name="preText" value="" type="string" />

	<handler name="onfocus">
		//if ($debug) Debug.write("tt: ",this);
		this.field.setAttribute('bgcolor',"0xFFFFFF");
		//this.setAttribute('bgcolor',"0xFFFFFF");
    	this.preText = this.getText();
    </handler>
	
	<handler name="onblur">
		this.field.setAttribute('bgcolor',"0xEEEEEE");
		//this.setAttribute('bgcolor',"0xEEEEEE");
		<![CDATA[
			if (this.regexpType != null && this.regexpType!="none"){
				////if ($debug) Debug.write("onblur");
				////if ($debug) Debug.write("onblur check ",this.regexpType);		
				var fieldValue = this.getText();
				if (this.regexpType=="email") {
					var regExpV = ".+\\@(\\[?)[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,3}|[0-9]{1,3})(\\]?)";
					this.regexpLabelid = 519;
				} else if (this.regexpType=="date"){
					var regExpV = "(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d";
					this.regexpLabelid = 518;
				} else if (this.regexpType=="float"){
					var regExpV = "[0-9]*\\.[0-9]*";
					this.regexpLabelid = 1318;
				} else if (this.regexpType=="phone"){
					var regExpV = "\\+[0-9]+ [0-9]+ [0-9\\-]+";
					this.regexpLabelid = 522;
				} else if (this.regexpType=="number"){
					var regExpV = "[0-9]*";
					this.regexpLabelid = 1319;
				} else if (this.regexpType=="time"){
					var regExpV = "([01][0-9]|2[0-3]):[0-5][0-9]";
					this.regexpLabelid = 1320;
				}
				////if ($debug) Debug.write("regExpV: ",regExpV);
		  	    var fieldValue = this.getText();
		  	    var regex = "/^"+regExpV+"$/";
		  	    
		  	    var t = "( !( (\""+ fieldValue +"\".replace("+ regex +" ,\"\").length == 0) && ( "+ regex +".test(\""+ fieldValue +"\")) ) ) ";
	            this.bumb_1.callIt(t);
				
			}
		]]>
	</handler>
	
    <browserjavascriptcallback name="bumb_1">
        <handler name="onvalue" args="val">
            <![CDATA[
	            if(val=="true"){
	                //Debug.warn("FALSE: ",parent.parent,parent.parent.regexperror);
	                if (this.getAttributeRelative('x',canvas)+12 < canvas.width - 250) {
		              	disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas),
		              					y:this.getAttributeRelative('y',canvas)+26,
		              					regexptext:canvas.getLabelName(parent.regexpLabelid)}));
	                } else {
	                    disablesTooltips(new lz.regexptipInverse(canvas,{x:this.getAttributeRelative('x',canvas),
	                                    y:this.getAttributeRelative('y',canvas)+26,
	                                    regexptext:canvas.getLabelName(parent.regexpLabelid)}));
	                }
	              	parent.usePreContent();
	              	parent.setAttribute('isvalidInput',false);
	            } else {
	              	if(!this.parent.isvalidInput){
	                	disablesTooltips(null);
	              	}
	              	parent.setAttribute('isvalidInput',true);
	            }
            ]]>
        </handler>
    </browserjavascriptcallback>    	

    
    <method name="setLabelId" args="_labelid" >
        this.labelid = _labelid;
        this.setAttribute("text",canvas.getLabelName(this.labelid));
    </method>
    
  	<method name="usePreContent">
  		this.setAttribute('text',this.preText);
  	</method>    
  	
    <!--
    <browserjavascriptcallback name="bumb_1">
        <handler name="onvalue" args="val">
            if(val=="true"){
            	if(parent.parent.isreport){
                    Debug.write("TRUE: ",parent.parent,parent.parent.regexperror);
              		disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas)+12,y:this.getAttributeRelative('y',canvas)+12,regexptext:'Invalid Input'}));
              	} else {
                    Debug.write("FALSE: ",parent.parent,parent.parent.regexperror);
              		disablesTooltips(new lz.regexptip(canvas,{x:this.getAttributeRelative('x',canvas)+12,y:this.getAttributeRelative('y',canvas)+12,regexptext:'Invalid Input'}));
              	}
              	parent.usePreContent();
              	parent.setAttribute('isvalidInput',false);
            } else {
              	if(!this.parent.parent.getAttribute('isvalidInput')){
                	disablesTooltips(null);
              	}
              	parent.setAttribute('isvalidInput',true);
              	if (this.parent.parent.textblur) this.parent.parent.textblur.sendEvent(); 
            }
        </handler>
    </browserjavascriptcallback> 
    -->       
    
</class>

</library>
