<?xml version="1.0" encoding="UTF-8" ?>
<canvas debug="false" width="100%" height="100%">
    
<include href="incubator/lzcombobox.lzx" />
<include href="incubator/shadowbox.lzx" />
<include href="incubator/roundrectbutton.lzx" />
<!--
<include href="incubator/stylishbutton.lzx" />
 -->

<include href="resources/" />
<include href="base/" /><!-- attributes,methods,datasets,are moved into /base -->
<include href="modules/" /> 

<!--
    this attribute has to stay here!
 --> 
<attribute name="isRegisterLogin" value="false" type="boolean" />
<attribute name="isWebSiteLogin" value="false" type="boolean" />

<resource name="currentsplash" src="splash_loading_content.swf" />
<resource name="configure_vidrsc" src="resources/configure.png" />
<resource name="mainbackroundmenu_rsc" src="resources/mainbackroundmenu.png" />
<splash><view center="true" ratio="1" resource="splash_loading.swf" /></splash>
<!-- main colors: 264269 -->
<handler name="oninit">
    //this.setAttribute('framerate',12);
    var cmenu = new LzContextMenu();
    canvas.setDefaultContextMenu(cmenu);
    cmenu.hideBuiltInItems();
    var item1 = cmenu.makeMenuItem('i4Change', new LzDelegate(this,"openMeetingsMenuItemHandler"));
    cmenu.addItem(item1);
    //if($debug) Debug.write("main.lzx/oninit:",this);
    // Add Custom Items:
    //var item1 = cmenu.makeMenuItem('MedCast', new LzDelegate(this,"openMeetingsMenuItemHandler"));
    //cmenu.addItem(item1);
</handler>


<view name="website_content" width="${ canvas.width }" 
    height="${ canvas.height }" visibility="hidden">
    
</view>  

<!-- View for Contents. All Windows will be loaded on this view. -->
<view name="main_content" y="${ canvas.naviHeight }" width="${canvas.width}" 
    height="${canvas.height-canvas.naviHeight }" visibility="hidden">
    <view x="0" name="_content" layout="axis:y;spacing:2">
        <view name="inner" />
        <method name="clearAll">
            <![CDATA[
                //if($debug) Debug.write("main.lzx/main_content._content.inner.clearAll(): ",this.inner,this.inner.subviews.length);
                var baseContent = this.inner.subviews[0].close();
                for (var eg in this.inner.subviews) {
                    //if($debug) Debug.write("main.lzx/main_content._content.inner.clearAll()-subviews: ",this.inner.subviews[eg]);
                    if (eg!=0) this.inner.subviews[eg].close();               
                }
                return baseContent;
            ]]>
        </method>
    </view>   
     
</view>  
  
<!-- View for Navigation-bar and App-name
<view name="_mainbgcontentNavi" x="0" y="0" bgcolor="0xDDDDDD" clip="true"
    width="100%" height="$once{ canvas.naviHeight }" visibility="hidden"
    >
    <text id="mainBaseText" x="10" y="2"
        fgcolor="0xEFEFEF" fontsize="20" fontstyle="bold">
        <method name="setShadow" >
            <![CDATA[
            if (this.isinited){
                this.normalMC = this.getMCRef();
                this.displacementMap = new flash.filters.DropShadowFilter();
                this.normalMC.filters = [this.displacementMap];
            }
            ]]>              
        </method> 
        <handler name="onclick">
            lz.Browser.loadURL(canvas.currentappnameurl,"_blank");
        </handler>  
        <labelTooltip id="mainBaseTextLabel" />      
    </text>
    <text x="10" y="32" fontstyle="italic" fontsize="10">empower people to exceed expectations</text>
    <handler name="oninit">
        var cmenu = new LzContextMenu();
        this.setContextMenu(cmenu);
        cmenu.hideBuiltInItems();
    </handler>     
</view>
 -->
 
<topNavigation id="_currentUserHeaderMenu" />

<view name="_hideAll" visible="false" opacity="0.6" 
    width="${ canvas.width }" height="${ canvas.height }" 
    bgcolor="0xFFFFFF" clickable="true" showhandcursor="false" >
</view> 

<!--
<labelText x="${ parent.width - this.width }" y="58"
           id="_currentUserHeaderMenu" />
 -->
 
<!-- View for "Loading" -->
<view name="_loadingAll" visible="false" opacity="0.5" 
    width="${ canvas.width }" height="${ canvas.height }" 
    bgcolor="0xFFFFFF" clickable="true" >
    <text align="right" y="56" fontsize="14" fgcolor="red">Loading...</text>
</view> 

</canvas>